# version: "3.8"
services:
  local-https-portal:
    image: steveltn/https-portal:latest
    container_name: LocalHttpsPortal
    ports:
      - "80:80"
      - "443:443"
    environment:
      DOMAINS: "defender-portal-local.duckdns.org -> http://local-portal:80"
      STAGE: "production"
    volumes:
      - https-portal-data:/var/lib/https-portal

  local-identity-service:
    build:
      context: .
      dockerfile: Dockerfiles/Service_Dockerfile
      args:
        SERVICE_DIR: Defender.IdentityService
    image: local-identity-service
    container_name: LocalIdentityService
    ports:
      - "47050:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
    env_file:
      - secrets/secrets.local.list

  local-user-management-service:
    build:
      context: .
      dockerfile: Dockerfiles/Service_Dockerfile
      args:
        SERVICE_DIR: Defender.UserManagementService
    image: local-user-management-service
    container_name: LocalUserManagementService
    ports:
      - "47051:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
    env_file:
      - secrets/secrets.local.list

  local-notification-service:
    build:
      context: .
      dockerfile: Dockerfiles/Service_Dockerfile
      args:
        SERVICE_DIR: Defender.NotificationService
    image: local-notification-service
    container_name: LocalNotificationService
    ports:
      - "47052:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
    env_file:
      - secrets/secrets.local.list

  local-portal:
    build:
      context: .
      dockerfile: Dockerfiles/Portal_Dockerfile
      args:
        SERVICE_DIR: Defender.Portal
    image: local-portal
    container_name: LocalPortal
    ports:
      - "47053:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
    env_file:
      - secrets/secrets.local.list

  local-walutomat-helper-service:
    build:
      context: .
      dockerfile: Dockerfiles/Service_Dockerfile
      args:
        SERVICE_DIR: Defender.WalutomatHelperService
    image: local-walutomat-helper-service
    container_name: LocalWalutomatHelperService
    ports:
      - "47055:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
    env_file:
      - secrets/secrets.local.list

  local-secret-management-service:
    build:
      context: .
      dockerfile: Dockerfiles/Service_Dockerfile
      args:
        SERVICE_DIR: Defender.SecretManagementService
    image: local-secret-management-service
    container_name: LocalSecretManagementService
    ports:
      - "47056:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
    env_file:
      - secrets/secrets.local.list

  local-job-scheduler-service:
    build:
      context: .
      dockerfile: Dockerfiles/Service_Dockerfile
      args:
        SERVICE_DIR: Defender.JobSchedulerService
    image: local-job-scheduler-service
    container_name: LocalJobSchedulerService
    ports:
      - "47057:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
    env_file:
      - secrets/secrets.local.list

  local-wallet-service:
    build:
      context: .
      dockerfile: Dockerfiles/Service_Dockerfile
      args:
        SERVICE_DIR: Defender.WalletService
    image: local-wallet-service
    container_name: LocalWalletService
    ports:
      - "47058:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
    env_file:
      - secrets/secrets.local.list

  local-general-testing-service:
    build:
      context: .
      dockerfile: Dockerfiles/Service_Dockerfile
      args:
        SERVICE_DIR: Defender.GeneralTestingService
    image: local-general-testing-service
    container_name: LocalGeneralTestingService
    ports:
      - "47059:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
    env_file:
      - secrets/secrets.local.list

  local-risk-games-service:
    build:
      context: .
      dockerfile: Dockerfiles/Service_Dockerfile
      args:
        SERVICE_DIR: Defender.RiskGamesService
    image: local-risk-games-service
    container_name: LocalRiskGamesService
    ports:
      - "47060:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
    env_file:
      - secrets/secrets.local.list

  local-budget-tracker-service:
    build:
      context: .
      dockerfile: Dockerfiles/Service_Dockerfile
      args:
        SERVICE_DIR: Defender.BudgetTracker
    image: local-budget-tracker-service
    container_name: LocalBudgetTrackerService
    ports:
      - "47061:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
    env_file:
      - secrets/secrets.local.list

  mongo_local:
    container_name: "mongo_local"
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "mongo_local_data:/data/db"
      - "mongo_local_config:/data/configdb"

volumes:
  https-portal-data:
  mongo_local_data:
  mongo_local_config:
